<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>